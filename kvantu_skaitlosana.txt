==============================================
[11.02]
==============================================
Pierakstu to kas NAV slaidos.
-------
Pārāk daudz mainīgo, lai realizētu ar parastu datoru,
1 daļiņa 2 mainīgie => N daļiņas 2^N

Kvantu datoru var būvēt no jebkuras sitēmas, kas paļaujas kvantu fizikas likumiem.

Magnētiskā lauka frekvence norāda kādā atomu ietekmē. Atoma kaimiņi arī var ietekmēt frekvenci.
-------
Saturs:
1.Kursa skaitļošanas pamati
	kvantu biti
	mērījumi
	transformācijas
	kvantu loģikas shēmas
2.Vienkāršākie kvantu algoritmi
	parītāte
	meklēšana starp 4 elementiem
3.Kvantu meklēšana
4.Skaitļu sadalīšana reizinātājos
5.Citas tēmas
	kvantu šifrēšana
	kvantu kļūdu korekcija
	kvantu mehānikas vektoru un matricu formā
-------
Grāmatas un materiāli:
1. lekciju piezīmes e-studijās :)
2. Nielsen, Chuang, Quantum Computation & quantum information
3. Hirvensalo. Quantum Computing
4. Willams. Explorations in quantum computing (pirmās 150-200 lpp)

Prasības: 60% MD, 40% eksāmens
eksāmens 2h ar palīgmateriāliem papīra formā uzdevumi
-----------------
Kvantu bits
-----------------

Parasts bits: 0 vai 1
Varbūtisks bits: 0 ar varbūtību p_0 un 1 ar varbūtību p_1

Kvantu bits: 0 ar aplitūdu alpha_0 un 1 ar amplitūdu alpha_1
komplekso skaitļi alpha |alpha_0|^2 + |alpha_1|^2 = 1

|x+yi|=sqrt(x^2+y^2)
(x+yi)*=(x-yi)

Kvantu bitu stāvokļi
|0), |1)
ar aplitūdām

alpha_0|0) + alpha_1|1)

(4/5)|0) + (3/5)|1)

(1/\sqrt{2})|0) + (1/\sqrt{2})|1)
---------------------
Saikne ar fiziku
---------------------
Piemēri:
1. Spins
ietekmē kuram magnēta polam pievelkas.
|1) = spins uz augšu
|0) = spins uz leju
citā virzienā -> pārējās vērtības

piemīt atomu kodoliem, elektroniem u.c.

2. Gaisma
|1) = gaismas daļiņa, kas lido pa vienu vadu
|2) = gaismas daļiņa, kas lido pa otru vadu

3. Enerģijas līmeņi
|0) = zemākā enerģija
|1) = otra zemākā enerģija

4. Supravadītāji
Elektronu vilnis, kas nodrošina supravadītājs.
T.i. daudzi elektroni vienā un tai pašā kvantu stāvokli.
|0) = vilnis plūst vienā virzienā
|1) = vilnis plūst otrā virzienā.
-------------
Divincenzo kritēriji:
Kvantu bits = divi fizikāli stāvokļi, ko iespējams perfekti atšķirt.
Iespēja inicializēt kvantu bitu stāvoklī mūsu izvētejā stāvoklī.
Iespēja veikt patvaļigas 1 kvantu bitu unitārās transformācijas.
Iespēja nolasīt informāciju
Iespēja veikt mijiedarbību starp vairākiem kvantu bitiem.
--------------
Parastā informācija				|			Kvantu informācija
Var nomērīt (pilnībā)					Nevar pilnībā nomērīt (nevar a|0)+b|1)=>(a,b))
Mērīšanas fakts nemaina saturu			Mērīšanas fakts maina saturu
Var izdzēst								Nevar izdzēst
Var kopēt								Nevar kopēt (klonēt)
Interferē tikai konstruktīvi			Interferē arī destruktīvi
---------------------------------------
Stāvokļi a|0)+b|1)
Transformācijas
Mērījumi

Mērījumi vienam kvantu bitam:
1. Standartmērījums
a|0) +b|1) =>	0 ar varbūtība |a|^2 un stāvoklis = |0)
				1 ar varbūtību |b|^2 un stāvoklis = |1)

Ja v1 = a|0) + b|1)
   v2 = c|0) +d|1)
  ir perpendikulāri kā vektori, tad var mērīt vai kvants ir stāvoklī v1 vai v2.
  
1/\sqrt{2}|0)+1/\sqrt{2}|1)=|+)
1/\sqrt{2}|0)-1/\sqrt{2}|1)=|-)
------------------
Transformācijas
T:{|0) -> a|0) + b|1)
  {|1) -> c|0) + d|1)
  
1.T ir lineāra
x|0)+y|1)=>x(a|0)+b|1))+y(c|0)+d|1))
2. T saglabā vektoru garumus
 a|0) + b|0) -> a'|0) + b'|0) un |a|^2 + |b|^2
	=> |a'|^2 + |b'|^2 

1 un 2 => unitāra transformācija

Piemēri
Vienības transformācija
1. I{|0)->|0);|1->|1)

2. X{|0)->|1);|1->|0)

3. Z{|0)->|0);|1->-|1)

4. H{|0)->1/\sqrt{2}|0)+1/\sqrt{2}|1)
    {1/\sqrt{2}|0)-1/\sqrt{2}|1)
	
H^2 == X^2 == Z^2 == I
H*Z*H == X 
H*X*H == Z

H = rotācija +pi/4 , mirror horizontal

rotācija  - alpha (pretēji pulksteņa rādītāja virzienam)
|0) -> cos alpha |0) + sin alpha |1)
|1) -> -sin alpha |0) + cos alpha |1)

==============================================
[18.02]
==============================================
Unitāru transformāciju īpašības.

Kvantu skaitļošana = lineārā algebra.
a|0) = b|1) = vektors (a)
					  (b)
Unitāra tasformācija

T:{|0) -> a|0) + b|1)
  {|1) -> c|0) + d|1)

  (alpha) _\ (a c)(alpha)
  (beta)   / (b d)(beta )
 
----------------------------
Vispārīgas kvantu sistēmas
Bāzes stāvokļi : |1), |2) ... |k)
Vispārīgs stāvoklis
|\Tau) = \sum_{n=1} ^k alpha_n|n)
\sum_n=1^k |alpha_n|^2 = 1

Mērījumi:
1 ar varbutibu |alpha_1|^2
..
n ar varbutibu |alpha_n|^2

Transformācijas:
{|1) -> a_11|1) + ... + a_1k|k)
{...
{|k) -> a_k1|1) + ... + a_kk|k)

derīgi stāvokļi pāriet par derīgiem
----------------------------
Kā noteikt vai trasnformācija ir unitāra?
1) transfomācijas, kas ir unitāras:
I,H,X,Z
2) transformācijas, kas nav unitāras:
1.
{|0)->|0)
{|1)->|0)
piem 1/\sqrt{2}|0)+1/\sqrt{2}|1)
{|0)->|0)
{|1)->-12/13|0)+5/13|1)

Kritēriji:
U - vispārīga kvantu stāvokļa transformācija
0) derīgi kvantu stāvokļi attēlojas, par derīgiem kvantu stāvokļiem
1) bāzes vektori ir ar garumu 1 un ir perpendikāli viens otram
2) U^+U=I  ^+ kopleksi saistītā matrica = transpocija(atspoguļo pret galveno diagonāli) un elementus aizstāj par kompleksi saistītajiem.

Piemēri.

Heiristika 2 d.
ja |0) -> a|0) +b|1)
tad otram vektoram jābūt
 |1) -> b|0) -a|1)
 vai 
 |1) -> -b|0) +a|1)
 
matricas ar komplekciem koificentiem.
4. piemērs
|0) -> 1/\sqrt{2}|0) + i/\sqrt{2}|1)
|1) -> i/\sqrt{2}|0) + 1/\sqrt{2}|1)

(u,v) = sum u_i^(*)*v_i (pirmā vektora elementa komplesi saistīto reizina ar otra vektora elementu)

U-unitāra <=> U^+U = I

Apgriezstā transformācija.
Jebkurai unitārai trasformācijai eksistē apgrizetā trasnformācija U^-1 = U^+

----------------------------------
Vairāki kvantu biti

k kvantu biti
var izveidot bāzes stāvokļus kuriem numur ir k bitu virknītes.

Vispārīgs stāvoklis ir bāzes vektoru kombinācijas ar amplitūtām.
a|0...0)+b|0...01)+c|0...10)
Amplitūdu absolūto vērtību kvadrātu summa = 1.

--------------------------------
2 kvantu biti

1. bits |0), 2. bits |1)
=> |01)

Tenzoru reizinājums
3. a|0)+b|1)  c|0)+d|1)
=> a|0)+b|1) (x)  c|0)+d|1) = ac|00) + bc|10) + ad|01) + bd|11)

Apgieztais uzdevums
atrast a,b,c,d

piemērs 1.
var.

piemērs 2.
1/\sqrt{2}|00) + 1/\sqrt{2}|11)

a*d = 0 
b*c = 0
a*c = 1/\sqrt{2}
b*d = -1/\sqrt{2}

nav iespējams

1) stāvoklis 1/\sqrt{2}|00) + 1/\sqrt{2}|11) ir iespējmas
2) Šādas stāvoklis var rastiess tikai caur mejiedarbību starp 1. un 2. bitu.

Terminoloģija:
1) ja var uzrakstīt kā tenzoru reizinājumu, jad tas ir reizinājuma stāvoklis(product state)
2) tādus ko nevar sauc par sapīto (entangled)
3) reizinājuma = nesapītais (unentangled)

Piemēri:
a/b = (ac/bc) = Q 
a=Qb
a^2+b^2=1
(Q^2+1)b^2=1
b= \sqrt(1/(Q^2+1))

Mērījumi 2 kvantu bitiem:
pilns: a_00|00)+a_01|01)+a_10|10)+a_11|11)
=> 00 ar varbūtību |a_00|^2
...
1 bits:
	a_00|00)+a_01|01)+a_10|10)+a_11|11)
=> 0 ar varbūtību |a_00|^2 |a_01|^2
=> 1 ar varbūtību |a_10|^2 |a_11|^2

paliek pāri: 
ja iegūst 0
(a_00/\sqrt(|a_00|^2+|a_01|^2)) |00) + (a_01/\sqrt(|a_00|^2+|a_01|^2))

ja iegūst 1
a_10/\sqrt(|a_10|^2+|a_11|^2)) |00) + (a_11/\sqrt(|a_10|^2+|a_11|^2))

---------
Sapītie stāvokļi un knvanto mehānikas paradoksi.

|00) + |11)

Nomēram katru daļinu atsevišķi
=> |00)
=> |11)

Divainais:
- 1. daļina mērīšana maina 2. daļiņas stāvokli pat ja tā atrodas uz Mēness.
----------------------------------------------------
25.02.15
----------------------------------------------------
Divi kvantu biti:
	a|00) + b|01) + c|10) + d|11), |a|^2 + ... = 1
Unitāru transformāciju 2 (un vairāk) kvantu bitiem:
	1) 1 kvanta bitu transformācijas ir iespējams pielietot jebkurams no 2 bitiem
	U: {|0) -> a|0) + b|1) U2: { |00) -> a|00) + b|01)
	    |1) -> c|0) + d|1)	     |01) -> c|00) + d|01)
				     |10) - > a|10) + b|11)
				     |11) - > c|10) + d|11)

	I X U, kur I pirmais bits un U otrais

H: (adamār transf) { |0) -> 1/sqrt(2)|0) + 1/sqrt(2)|1)
		     |1) -> 1/sqrt(2)|0) - 1/sqrt(2)|1)

1) Pieleitot H 2. bitam
	P1:
	1/sqrt(2)|00) + 1/sqrt(2)|11)
	1/sqrt(2)(1/sqrt(2)|00) + 1/sqrt(2)|01)) + 1/sqrt(2)(1/sqrt(2)|10) - 1/sqrt(2)|11))
	sareizina un iegūst 1/2|00) + 1/2|01) ...
	P2:
	1/sqrt2(1/sqrt2|10) + 1/sqrt2|11)) - 1/sqrt2(1/sqrt2|10) - 1/sqrt2|11))
	1/2 ( |10) + |11) - |10) + |11))
	|11)

Controlled NOT:
{|00) -> |00) {|0x)->|0x)
|01) -> |01)   |1x)-|1not(x))
|10) -> |11)
|11) -> |10)

Skaitļošanas modelis:
	1) n kvantu biti
	2) var pielietot 1 kvantu bita transf, controlled not
	3) sākuma stāvoklis |000....0)
	4) pielieto transformācijas, mēra beigu stāvokli

Kvantu loģiskās shēmas:
-
-
-
-
(katra līnija atbilst vienam kvantu bitam, uz līnijas pieraksta tranformācijas, kas jāizmanto šim bitam, controlled not pieraksta ar pilnu un tukšu bumbiņu starp 2 kvantu bitiem, kur melnais aplis(nosaka pielietošanu) ir 1. bitā un tukšais (uz kuru pielieto) 2. bitam)
==========================================
04.03.2015
==========================================
Atkārtojums: Loģiskās shēmas

konstrollētā U transformācija, pielietojam U, ja pirmais(kontroles) bits ir |1).

Dubultais kontrolētais not, ja jebukurš no pirmiem diviem bitiem ir |0), tad nemainās
ja |11) tad 3 bits mainās uz pretējo.
Toffoli elements.

Universalitāte
Loģisko elementu kopa ir universāla, a jebkurai unitārai U, ja to var realizēt kā virkni no šādiem elementiem
U=U_1 U_2 ... U_n
U_i elements no logīsko elementu kopa

T. CNOT+1 bita unitāas transformācijas  - universāla kopa.

Fakts 1.

var realizēt kontrolēto U ar patvaļīgu skaitu kontrolēto bitu.

Fakts 2.

Jekurai U-unitārai.
U=U_1 U_2 ... U_n
U_i aiztiek tikai 2 stāvokļus.

U_i={|x_1 ... x_n) -> a|x_1...x_m) + b|y_1 ... y_m)
    {|y_1 ... y_m) -> c|x_1...x_m) + d|y_1 ... y_m)
	{|z_1 ... z_m) -> |z_1 .. z_m)
	ja |z_1 ... z_n)=/= |x_1 .. x_m)
	   |z_1 ... z_n)=/= |y_1 .. y_m)

T{|x_1 x_m) -> |11..10)
 {|y_1 y_m) ->|11..10)
 
T{|11..10)->|x_1 x_m)
 {|11..10)->|y_1 y_m)
--------------------------------
Vai ar kvantu-mehāniski var izskaitļot vius to pašu, ko var ar tradicionālu datoru?
NOT = X
AND x y = toffolli |x y 0)-> | x y x&y)

Kā tikt vala no garbage.
Tīra skaitļošana(apakšprogrammas).
|xyz0.....0) ->|xyz,f(x),000000)

X izplida otru reizi pēc tam
CNOT izplida arī otru reizi pēc tam

Elementi jānonullē pretējā secībā kā tika rēķināts.
================================
Kvantu algoritmi

Doiča (paritātes algoritms)
Melnā kaste
f: 1 bit => 1 bit
Uzdevums noskaidrot (f(0)+f(1)) mod 2
Cik reizes jādarbina melnā kaste?
 Klasiski 2
 Kvantiski 1

Ko nozīmē MK kvantu pasaulē?
1. |x 0) -> |x f(x))

2. |x 0) -> |x f(x))
   |x 1) -> |x not(f(x)))
   
Doiča

---H-------| MK |- |H|-
---|X|-|H|-|    |------
Mēra, ņem 1. bitu kā atbildi
punkts 1 pirms 
punkti 2 pēc melnās kastes

1/2|00)-1/2|01)+1/2|10)-1/2|11)

Ja f(0)=f(1)
|x 0)->|x 0)
|x 1)->|x 1)
Rezultāts nemainās

Ja f(0)=0; f(1)=1
|0t)->|0t)
|10)->|11)
|11)->|10)

Vienkāršošana

Jauna melnās kastes definīcija (MK2)
ieeja = x&y
|x)->|x),  ja f(x)=0
|x)->-|x), ja f(x)=1

MK2|x) = MK|x(0XH))

Doiča algoritms caur MK2.

|0)-H-MK2-H

|1) un -|1) neatšķirami

----------------------------------
Meklēšana starp 4 elementiem.
MK x in{00,01,10,11}
f(x)=1 tieši 1 x.
Uzdevums: atrast x.
Klasiski: 3 prasīšanas
Kvantiski: 1 reizi

MK2 

|0) -H-|MK 2|---#-H--
|0) -H-|    |-H-o----
=================================
11.03.2015
=================================
Meklēšana

Dots: x_1 ... x_n \in {0,1}
c-> x_i
Uzdevums: atrast i:x_i=1
Klasiski: N jautājumu
Kvantiski: \sqrt{N} jautājumi

Der jebkurai pilnās pārlases problēmai.

--------------------------------
Difūzijas transformācija

|1), |2), |N)

|1)->(-1+2/N)|1) + 2/N|2) .. + 2/N|N)
|1)->2/N|2) + (-1+2/N)|2) .. + 2/N|N)
...
|1)->2/N|2) + 2/N|2) .. + (-1+2/N)|N)

ir unitāra

Apgalvojums: Šī ir vienīgā netriviālā unitārā matrica ar formā
|1)->a|1) + b|2) .. + b|N)
|1)->b|2) + a|2) .. + b|N)
...
|1)->b|2) + b|2) .. + a|N)

Grovera algoritms(1996)
[Pieņemam, ka viens i: x_i=1]

Sākuma stāvoklis: (visi ar vienādu varbūtību)
(1/\sqrt{N})\sum_i=1^n |N)

Q ir MK2 melnā kaste
D ir difūzijas transformācija

floor(pi/4\sqrt{N}) reizes: Q un tad D
Mēra stāvokli
Rezultāts i:x_i=1 ar varbūtību ~1
-------------------------------------
Difūzijas transformācijas jēga

a_1|1) + ... + a_N|N)
vidējais v= sum a / N

(v+d_1)|1) + (v+d_2)|2) + ... + (v+d_N)|N)
  | D
  v
(v-d_1)|1) + (v-d_2)|2) + ... + (v-d_N)|N)
  
Spogūļattēls amplitūdām pret vidējo vērtību. (atspoguļojums, reflection against average).

----------------
Grovera algoritma jēga
Uz pirkstiem:
Pēc tam, kad Q nomaina 1 elementam zīmi uz pretējo, D palielina šī elementa amplitūdu, mazliet samazina pārējo stāvokļu amplitūdu.


||||||
-----


 |Q
 V

 |||||
-----
|

 |D
 V

|
|
||||||
-----
 

Cits skats uz defūzijas transformāciju.

A) V|1)+ .... + V|N)
   |D
   V
  V|1)+ .... + V|N)
   
B) d_1|1)+ .... + d_N|N)   
   |D
   V
   -d_1|1)- .... - d_N|N) 
   
Apgalvojums
D|T_start)=|T_start)
D|T)=-|T),ja T _|_ |T_start)

M|1)=1/\sqrt{N}|1) + 1/\sqrt{N}|N) (H|1)=1/\sqrt{2}|1)+1/\sqrt{2}|2))

R|1)=|1)
R|x|=-|x),x>=2

D = M^-1RM
-------------------------
Stāvokļu telpas apakškopas

Algoritma stāvoklis = a|1)+...a|i-1)+b|i)+a|i+1) ... a|N)

Pierāda pēc indukcijas.

Pēc k soļiem, ja i ir meklējmais
sin((2k+1)\alpha) + (cos(2k+1)\alpha)/\sqrt{N-1} *\sum_{j=/=i} |j)

\alpha = arcsin(1/\sqrt{N})

lai sin =1, tad (2k+1)\alpha=\pi/2
k = \pi/(4\alpha)

pie lieliem N
k= \pi\sqrt{N}/4

precīzi:
k= \pi/(4arcsin(1/\sqrt{N}))

P=sin^2((2k+1)\alpha)=sin^2((a+1)arcsin(1/\sqrt{N}))

aptuveni:
sin^2(2\sqrt{N}*k)
------------------
Kas notiek ja ir vairāki meklētie objekti.
objektu skaits = l
(a) l-zināms
(b) l-nezināms

(a): \pi/4 \sqrt{N} => \pi/4 \sqrt{N/l}

(b) Piemērs:
reižu skaits = \pi/8 \sqrt{N}
1. = l=4, tad viss ir labi
2. l=1 ar varbutibu 1/2 pareizo
3. l=16 ar varbūtību 0 

Algoritms 2
Darbina pamatalgoritmu ar reižu skaitu
k=2^i;k<={\pi/4\sqrt{N}}

Grovera algoritms
Dots x_1 .. x_n in {0,1}
Uzdevums atrast i:x_i=1
\sum_i a_i|i)-> \sum_i a_i (-1)^{x_i}|i)
Grovera algoritms
1 meklējamais elements => \pi/4\sqrt{N}
l meklējamie elementi => \pi/4\sqrt{N/l}

Izpilda Grovera algoritmu
k_0=\pi/4 \sqrt{N}
k_1=k_0/3
k_{n+1}=k_n
izmanto ceil(k_n) soļus
līdz ceil(k_n)=0
==============================
18.03.2015
==============================
Kvantu Furje tranformācija / quantum Fourier transform

Kompleksie skaitļi triegonometriskajā formā
e^{i\alpha}=cos\alpha+i sin\alpha

r*(cos\alpha +i sin\alpha)

Vieninieka saknes
x^4=1
x=1,-1,i,-i

x^n=1
x=r*e^{i\alpha}
x^n=r^n*e^{ni\alpha}
r=1
\alpha = 2\pi/n k 

x_1=1
\omega=x_2=cos\2pi/n+i sin\2pi/n = e^{2\pi/n}
\omega^2=x_3
\omega^3=x_4

sum_{i=0}^{n-1}{w^i}=0

1+w^2+w^4=0

Kvantu Furje tranformācija:
|0),|1) ... |N-1)
F_N|0)=\sum_{j=0}^{N-1}{1/\sqrtN}|j)
F_N|k)=\sum_{j=0}^{N-1}{\omega^{kj}/\sqrtN}|j)

Piemēri
F_2=H

F_3=1/\sqrt{3}(1 1 1)
			  (1,w,w^2)
			  (1,w^2,w)

Furje tranformācijas pielietošana
N=9
F_9(1/\sqrt{3})|0)+1/\sqrt{3})|3)+1/\sqrt{3})|6))

F_9(1/\sqrt{3})|0)+1/\sqrt{3})|4)+1/\sqrt{3})|7))

QFT spēj uztvert periodus.
Piemēram F_9. ja periods ir 3 tad rezultāts sastāv no |0) |3) |6)

Teorēma N=p*q
[|0),..|N-1),F_N]
Ja |T)=1/\sqrt{q}|a)+1/\sqrt{q}|a+p)+...+1/\sqrt{q}|a+p(q-1))
tad F_n(T)=1\sqrt{p}(|0)+w^aq|q)+w^2aq|2q))
Periods p=> stāvoklis, kas sastāv tikai no 0,q,2q,...

--------------------------
Perioda meklēšana
Funkcija f(x),x\in{0,N-1}
Zināms, ka 
	f(x)=f(x+p) visiem x un
	f(x)=/=f(x+r),r \in{1,...,p-1}
	
	Ir loģiskā shēma, kas rēķina;
	Uzdevums: Atrast p.
	
	|x,0)->|x,f(x))
	
Vieglais gadījums: N dalās ar periodu p.
Sarežģītias gadījums: N var nedalīties ar p.

Kvantu algoritms:
-|F_N|----| f |---|F_N|---
-|   |----|   |---|   |---
-|   |----|   |---|   |---
          |   |
		  |   |
----------|   |-----------
----------|   |-----------
----------|   |-----------

nomērīt 2.reģistru

pēc mērījuma paliek pāri normalized(|a,y)+|a+p,y)+|a+2p,y)+...)

nomērot iegūst skaitli \in {0,N/P,2N/P,...}
Ja N=1000, skaitlis=20, tad zināms, ka periods dalās ar 50
t.i. tas pieder 50,100,...,1000

Darbinām algoritmu k reizes paņemam gcd no rezutātiem skaitlis_j|j in 1..k .
Apgalvojums, ja k=log_2 log_2 N+1,
tad ar varbūtību >=1/2 gcd(skaitis_1,..,skaitlis_k)

Lemma 1: Ja
|T)=\sum_j|a+pj)| 0<=a+jp<=N-1,
tad F|T) iegūst ceil(kN/P) vai floor(kN/P) ar varbutību c (c ir konstante)

Lemma 2: Ja N>=2p^2, tad no
	ceil(kN/P) vai floor(kN/P) var veinozīmīgi noteikt k un p.
==============================
25.03.2015
==============================
Skaitļa sadalīšana reizinātājos.
Dots N=p*q, p,q - pirmskaitļi
Atrast p un q

Var pieņemt:
	p=/=2 un q=/=2 => p un nepāra
	p=/=q

Skaitļa sadalīšana reizinātojos reducējas uz perioda meklēšanu.
(Skaitļa sadalīšana reizinātājos)<= (perioda meklēšana)
(<= \leq reducējas)
-------------------------------
1) Skaitļa sadalīšana reizinātājos <= Netriviala 1 kvadrātskane pēc mod N.

Def 1 kvadrāt skane pēc mod N-1
x: (x^2) = 1 (mod N)

Def triviālās kvadrātskanes x=+-1

x^2=1 (mod N)
(x-1)(x+1)=0 (mod N)

gcd(N,x-1)=p
gcd(N,x+1)=q

2) Netriviala 1 kvadrātskane pēc mod N. <= Skaitļa kārtas pēc mod N

Def. a kārta pēc mod N,
	mazākais x: a^x = 1 (mod N)
	Ja gcd(a,N)=1, tad šāds x vienmēr eksistē.

Algoritms:
1) Uzģenerē nejaušu a \in{2,...,N-1}
2) Ja gcd(a,N)=/=1, tad p=gcd(a,N), q={N/p}
3) x= (a kārta pec N) (a^x) = 1 (mod N)
4) Ja x-nepāra, sāk no jauna.
5) Ja x-pāra, pārbauda, vai a^{x/2} ir netriviālā sakne.

Lemma 1. P{x-nepāra} <= 1/4
Lemma 2. P{x-pāra, bet a^{x/2}=-1 (mod N) } <= 1/3  //triviālā kvadrātskane

Pr[alog. ir veiksmīgs]>=1-1/4-1/3 = 5/12

3) (Kārta pēc mod N) <= Periodu meklēšana
	f(x)=a^x (mod N)
	kārta r : a^r= 1 (mod N)
		f(x+r)=a^{x+r} mod N = a^x mod N = f(x)

Ķīniešu teorēma par atlikumiem.
 katram a \in {0 .. p-1}
		b \in {0 .. q-1}
	ir tieši viens x \in {0 .. pq-1}
		x=a (mod p)
		x=b (mod q)
	Kārta dalot ar p: mazākais r_1: a^{r_1}=1 (mod p)
		  dalot ar q: mazākais r_2: a^{r_2}=1 (mod p)
	Kārta dalot pēc p*q=N ir lcd(p,q)

g- primitīvā sakne, ja
	g,g^2 mod p, .., g^{p-1} mod p
satur visus atlikmus
	1 .. p-1 (katru tieši 1 reizi)
Teorēma: katram pirmskaitlim p ekistē primitīvā skane pēc mod p.
Apgalvojums g^{p-1} mode p =1

Kā varam izmanto primitīvo sakni?
a=3^b mod 7
kārta r = lcd(7-1,b)/b
-------------------------

Kļūdu korekcija kvantu datoriem

Data => Kļūdainie dati
	<-
	Kļudu korekcija

Klasiski
1) Atkārtošana
	0->000
	1->111
2) Kļūdu korekciju kodi

Vēsturiksi : kļūdu korekcija kvantu datoram nav iespējama.
Argumenti:
1. Ir bezgalīgi daudz iespējamo kļūdu.
	Jo iespējmas bezgalīgi daudz unitāro transformāciju.		Reducējas uz galīgu skait pamatkļudu.
2. Informāciju nevar duplicēt.
	Nav cloning transfomācijas.									
3. Lai uzzinātu, kad kļūda notikusi, jāmēra kvantu stāvoklis.	Mērām tikai to kāda kļuda ir notikusi,
																bet ne to kas var izjaut kvantu stāvokli.

Tagad: argumenti netraucē, algoritmi ir  kvantu

Kļūdu modelis:
- k kvantu biti -> n kvantu biti
- kļūdas skar <= d kvantu bitus
Variants: katram kvantu bitu skar neliela neprecizitāte (~\epsilon)
Neprecizitāte ~\epsilon === Lielāka kļūda ar varbūtiību n\epsilon
n biti, katram kļudas kļudas varbūtība \epsilon => n\epsilon kļūdas varbūtība

Quantum error corection
|T)->|T')- kļūdas -> |T'') - korekcijas -> |T')

Fault-tolerant computation.

Mērķis:
1 kvantu biti => 9 kvantu biti,
	var labot 1 kļūda
Vispārijums atkārtošanai.

Kādas kļūdas ir jālabo?

1/\sqrt{2} |000) +1/\sqrt{2} |111)

1) X jebkuram bitam
2) stāvokļa nobīdes jebkuram bitam
	{ |0) -> \sqrt{1-\epsilon}|0) + \sqrt{epsilon}|1)
	{ |1) -> -\sqrt{\epsilon}|0) + \sqrt{1-epsilon}|1)
3) Spontāni mērījumi uz jebkuru bitu

Pamatkļudas
1) Kļudas nav
2) X
3) Z
4) Y = XZ

Teorēma: ja var labot X,Y,Z, tad var labot jebkuru kļūdu, kas skar 1 kvantu bitu.
Teorēma 2: ja var labot kombināciju no X,Y,Z uz <= bitiem tad var labot jebkuru kļūdu, kas skar <= d

Spontāns mērījums
|T)=1/\sqrt{2} |000) +1/\sqrt{2} |111)
Z|T)=1/\sqrt{2} |000) -1/\sqrt{2} |111)
|000) = normalizēta summa
|111) = normalizētā starpība

Vispārīgi:
	ja |T) -kļuda uz 1.bitu-> |T')
	|T')=a|T)+bX|T)+cY|T)+dZ|T)
	Ja
	 |T)->|T)|0)
	X|T)->|T)|X)
	Y|T)->|T)|Y)
	Z|T)->|T)|Z)
	--------------

1 bits->Kods, kas labo X -> 3 biti -> 3x Kods, kas labo Z -> 9 biti

Kvantu atkārtojumu kods
	\alpha|0) +\beta|1) ->  \alpha|000) + \beta|111)
	
	CNOT uz divām svaigām nullēm skatoties uz 1. bitu.
	
Kā var noteikt, vai X kļūda ir notikusi?
Klasiski, nomēram, vai visi ir vienādi, tad kļūda nav notikusi, citādi zinām bits.

kvantiski pievieno vēl divus bitus, kur
sakotnejie biti ir x,y,z
jaunie biti ir CNOT(x)CNOT(z) un CNOT(y)CNOT(z)
nomēram šos bitus, tie ļauj identvicēt kurā bitā ir kļūda

Z var noreducēt uz X ar H trasformāciju
HZH

H|0) = |+)
H|1) = |-)

\alpha|0)+\beta|0)->\alpha|+++)+\beta|---)

CNOT uz divām svaigām nullēm skatoties uz 1. bitu., Tad uz visiem bitiem H.
==========================
08.04.2015
==========================
Kvantu kripogrāfija.

1. Simetriskā kriptogrāfija.
Abiem ir kopīga slepena atslēga.

Ziņojums m
Atslēga k

1)Alise c=f(m,k)
2)Bobs m=f^{-1}(c,k)

2. Asimetriskā kriptogrāfija.
E noklausās

Protokols kura rezultātā A un B nonāk pie kopīgas slepenās atslēgas, bet E to nezina.

Kvantu atslēgu sadale (Quantum key distribution)
- Protokols, kas pārraida kvantu bitus,
- Garantēti (pierādāmi) drošs
Balstās uz kvantu fizikas matemātisko modeli.

Mērījums:
\alpha|0) + \beta|1) -> 0 vai 1
4 stāvokļi |0), |1), H|0), H|1)
2 merījumi
  1) pret |0), |1)
	|0)->|0)
	|1)->|1)
	H|0),H|1) vienāda varbūtība dabūt |0),|1)
  2) pret H|0), H|1)
	H|0)->H|0)
	H|1)->H|1)
	|0),|1) vienāda varbūtība dabūt H|0),H|1)
Kopsavilkums
	|0)vai|1)	H|0)vai H|1) 
|0)	|0)		random
|1)	|1)		random
H|0)	random		H|0)	
H|1)	random		H|1)

Bennett-Brassand-1984
1. A nosūta B stāvokļus no {|0), |1), H|0), H|1)}
	|t_1),|t_2), ... |t_m)
2. B mēra katru bitu ar nejauši izvēlētā bāzē no {|0) un |1), H|0) un H|1)}
3. A katram i paziņo vai t_i pieder{|0), |1)} vai {H|0), H|1)}
4. B paziņo lietotos mērījumus, A un B atmet i, kur pielietots nepareizais mērījumus
5. A un B pārkodē 
	piemēram
	|0) -> 0
	|1) -> 1
	H|0) -> 0
	H|1) -> 1

Iegūst protoatslēgu.
Ja E nemēra kvantu stāvokļus, ko A ir nosūtījusi, tad A un B iegūst identiskas protoatslēgas
Klausoties tikai info no 3. un 4. soļa

Kas notiek, ja E mēra A kvantu bitus.
Ja E uzmin pareizo mērījumu, tad A,B,E iegūsto to pašu stāvokli
Ja E kļūdās, tad B un E iegūst random stavokoļus

Sekas:
E var uzzināt dažus bitus no protoatslēgas
Citi biti protoatslēgas biti tiek sabojāti.

BB84:
6. No protoatslēgas m bitiem, m/2 izmanto pārbaudei (vai A un B biti sakrīt).
	Ja nesakrīt => kāds viņus noklausās
	Ja sakrīt => pārējie m/2 biti atslēgā.

Pieņēmums visi klasiskie dati ir nosūtī, bet nevar izmainīti, bet visu var noklausīties.
BB84(korektais):
6. Ja starp m/2 pārbaudes bitiem.
	atšķiras >=epsilon(m/2) e=1/100 => kāds noklausās
	citādi izmantojam pārējos bitus par atslēgu
7. A un B pielieto kļūdu korekciju savām protoatslēgām.
	m/2 biti atšķiras
	m/4 biti sakrīt visi biti.

Problēma E var mērīt mazu skaitu bitu, lai izliktos par torksni līnijā.

8. <=epsilon m par m/4 bitiem.
Privātuma amplifikācija (pielieto hash funkciju)
m/4 bitu atslēga
->m/8 bitu atslēga
--------------------------------------
Kvantu stāvokļi vektoru un matricu formā
--------------------------------------
1. Kompleksi skaitļi
	(x+yi)*=x-yi
	(x+yi)*(x+yi)=x^2+y^2
	|a|^2=aa*
2. Kvantu stāvokļi kā vektori
	|T) = (a_1)
	      (a_2)
	      (..)
	      (a_n)

(T| = (a_1*,...,a_n*)
(T|  |T)
bra  ket

Speciālgadījums:
|i) = 0|1) + ... 1|i) + ...+0|n)


(T| * |\Phi) = skalārais reizinājums  T |phi

Iegūt j-elementa amplitūdu
(i|\Phi) === (i| * |\Phi)

(\Phi|\Phi)=1

Ja \Phi un T ir perpendeikulari, tad
(\Phi|T) = 0

Mērījums bra-ket formatā
T mēra pret |0), |1)
T = \alpha|0) + \beta|1)

\alpha = (0|T)
\alpha* = (T|0)

|\alpha|^2 = (0|T)(T|0)
|\beta|^2 = (1|T)(T|1)

Vispārīgi mērījumi
|T) pret |T_1),|T_2) .... |T_m)

|T) = \alpha|T_1).....
|T_i|^2=(T_i|T)(T|T_i)
