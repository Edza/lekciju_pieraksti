[2.09]
	4.tēmas:
	1)datu saspiešana:
		teksta saspiešana: Huffman, Lenpel-zevi, burrows-wheeler algoritmi
		attēlu un skaņas saspiešana: kvantizācijas, transformācijas
	2)kļūdu korekcija:
		nokodēt datus tā, lai tos varētu atjaunot kļūdu gadījumā
		Heminga kods, Rīda-Solomona kods
		tornado kods
	3)optimizācija:
		kā kaut ko izdarīt minimālā laikā
		lineārā programmēšana
		simpleksa/elipsoīda/iekšējā punkta algoritmi
	4)meklēšana:
		meklēšana simbolu virknēs: Karp-Rabin, Boyer-Moore, Knuth-Morris-Pratt
		aptuvenā meklēšana
		meklēšana dokumentu kolekcijās/Internetā

	Prasības KP iegūšanai:
		60% - veido MD: 
			3-5 md (uz papīra vai estudijās(viens fails + pdf formātā, jānorāda vārds/st. apliecības nr. gan tekstā, gan nosaukumā))
			termiņš ~2 nedēļa no publicēšanas estudijās (1 nedēļa kavējums 10% samazinājums, ilgāk nebūtu ieteicams)
		40% - veido KD:
			rakstiski ar materiāliem 2h
		i-iespēja:
			papildus uzdevumi

	Konsultācija:
		Pirmdienās 14-30 līdz 16-20, 319. kabinets

*************************************************************************************************
Datu saspiešana:
	Bez zudumiem: Dati` = Dati
		teksts/programmas
	Ar zudumiem: Dati` ~ Dati
		attēls/skaņa

Saspiešana bez zudumiem:
	1) Universāla saspiešana nav iespējama
	Dati nav nejauši(pastāv likumsakarības)
	Teksta saspiešana:
		angļu valodas teksts: 96 simboli
		bez saspiešanas: 96 simboliem -> 7 biti
		labākais algoritms: 1.9 biti/simbola
		teorētiskā robeža: ~1.3 biti/simb
		Huffman alg.: 4.7 biti/simb
	Likumsakarība(Hofmaņa alg.):
		daži burti ir daudz biežāki par citiem
	Prefiksu koki:
		binārs koks, škautnes apzīmētas ar 0/1, lapas - burti
		biežāk lietotie burit tuvāk koka saknei
	Huffmana alg:
		atrod labāko iespējamo prefiksu koku

